// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  avatar    String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos com outras tabelas do app de finanças
  accounts     Account[]
  transactions Transaction[]
  categories   Category[]
  goals        Goal[]
  cards        Card[]

  @@map("users")
}

model Account {
  id        String   @id @default(cuid())
  name      String
  type      String   // "checking", "savings", "investment", etc.
  balance   Decimal  @default(0)
  color     String?
  icon      String?
  isActive  Boolean  @default(true)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("accounts")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  type      String   // "income" ou "expense"
  color     String?
  icon      String?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("categories")
}

model Transaction {
  id          String   @id @default(cuid())
  amount      Decimal
  description String
  type        String   // "income" ou "expense"
  date        DateTime
  accountId   String
  categoryId  String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  account  Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Goal {
  id          String   @id @default(cuid())
  name        String
  targetAmount Decimal
  currentAmount Decimal @default(0)
  targetDate  DateTime?
  color       String?
  icon        String?
  isCompleted Boolean  @default(false)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("goals")
}

model Card {
  id         String   @id @default(cuid())
  name       String
  lastFour   String   // últimos 4 dígitos
  type       String   // "credit", "debit"
  brand      String   // "visa", "mastercard", etc.
  color      String?
  limit      Decimal?
  userId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("cards")
}
